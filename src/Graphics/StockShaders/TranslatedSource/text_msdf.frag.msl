#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

constant float _42 = {};

struct main0_out
{
    float4 out_var_SV_Target0 [[color(0)]];
};

struct main0_in
{
    float2 in_var_TEXCOORD0 [[user(locn0)]];
    float4 in_var_TEXCOORD1 [[user(locn1)]];
    float in_var_TEXCOORD2 [[user(locn2)]];
    uint in_var_TEXCOORD3 [[user(locn3)]];
};

fragment main0_out main0(main0_in in [[stage_in]], texture2d<float> msdf_0_ [[texture(0)]], texture2d<float> msdf_1_ [[texture(1)]], texture2d<float> msdf_2_ [[texture(2)]], texture2d<float> msdf_3_ [[texture(3)]], sampler msdfSampler_0_ [[sampler(0)]], sampler msdfSampler_1_ [[sampler(1)]], sampler msdfSampler_2_ [[sampler(2)]], sampler msdfSampler_3_ [[sampler(3)]])
{
    main0_out out = {};
    float4 _146;
    switch (in.in_var_TEXCOORD3)
    {
        case 0u:
        {
            float4 _76;
            switch (in.in_var_TEXCOORD3)
            {
                case 0u:
                {
                    _76 = msdf_0_.sample(msdfSampler_0_, in.in_var_TEXCOORD0);
                    break;
                }
                case 1u:
                {
                    _76 = msdf_0_.sample(msdfSampler_1_, in.in_var_TEXCOORD0);
                    break;
                }
                case 2u:
                {
                    _76 = msdf_0_.sample(msdfSampler_2_, in.in_var_TEXCOORD0);
                    break;
                }
                case 3u:
                {
                    _76 = msdf_0_.sample(msdfSampler_3_, in.in_var_TEXCOORD0);
                    break;
                }
                default:
                {
                    _76 = float4(0.0);
                    break;
                }
            }
            _146 = _76;
            break;
        }
        case 1u:
        {
            float4 _99;
            switch (in.in_var_TEXCOORD3)
            {
                case 0u:
                {
                    _99 = msdf_1_.sample(msdfSampler_0_, in.in_var_TEXCOORD0);
                    break;
                }
                case 1u:
                {
                    _99 = msdf_1_.sample(msdfSampler_1_, in.in_var_TEXCOORD0);
                    break;
                }
                case 2u:
                {
                    _99 = msdf_1_.sample(msdfSampler_2_, in.in_var_TEXCOORD0);
                    break;
                }
                case 3u:
                {
                    _99 = msdf_1_.sample(msdfSampler_3_, in.in_var_TEXCOORD0);
                    break;
                }
                default:
                {
                    _99 = float4(0.0);
                    break;
                }
            }
            _146 = _99;
            break;
        }
        case 2u:
        {
            float4 _122;
            switch (in.in_var_TEXCOORD3)
            {
                case 0u:
                {
                    _122 = msdf_2_.sample(msdfSampler_0_, in.in_var_TEXCOORD0);
                    break;
                }
                case 1u:
                {
                    _122 = msdf_2_.sample(msdfSampler_1_, in.in_var_TEXCOORD0);
                    break;
                }
                case 2u:
                {
                    _122 = msdf_2_.sample(msdfSampler_2_, in.in_var_TEXCOORD0);
                    break;
                }
                case 3u:
                {
                    _122 = msdf_2_.sample(msdfSampler_3_, in.in_var_TEXCOORD0);
                    break;
                }
                default:
                {
                    _122 = float4(0.0);
                    break;
                }
            }
            _146 = _122;
            break;
        }
        case 3u:
        {
            float4 _145;
            switch (in.in_var_TEXCOORD3)
            {
                case 0u:
                {
                    _145 = msdf_3_.sample(msdfSampler_0_, in.in_var_TEXCOORD0);
                    break;
                }
                case 1u:
                {
                    _145 = msdf_3_.sample(msdfSampler_1_, in.in_var_TEXCOORD0);
                    break;
                }
                case 2u:
                {
                    _145 = msdf_3_.sample(msdfSampler_2_, in.in_var_TEXCOORD0);
                    break;
                }
                case 3u:
                {
                    _145 = msdf_3_.sample(msdfSampler_3_, in.in_var_TEXCOORD0);
                    break;
                }
                default:
                {
                    _145 = float4(0.0);
                    break;
                }
            }
            _146 = _145;
            break;
        }
        default:
        {
            _146 = float4(0.0);
            break;
        }
    }
    uint2 _168;
    switch (in.in_var_TEXCOORD3)
    {
        case 0u:
        {
            _168 = uint2(msdf_0_.get_width(), msdf_0_.get_height());
            break;
        }
        case 1u:
        {
            _168 = uint2(msdf_1_.get_width(), msdf_1_.get_height());
            break;
        }
        case 2u:
        {
            _168 = uint2(msdf_2_.get_width(), msdf_2_.get_height());
            break;
        }
        case 3u:
        {
            _168 = uint2(msdf_3_.get_width(), msdf_3_.get_height());
            break;
        }
        default:
        {
            _168 = uint2(0u);
            break;
        }
    }
    out.out_var_SV_Target0 = mix(float4(0.0), in.in_var_TEXCOORD1, float4(fast::clamp((precise::max(0.5 * dot((float2(in.in_var_TEXCOORD2) / float2(float(_168.x), _42)).xx, (float2(1.0) / fwidth(in.in_var_TEXCOORD0)).xx), 1.0) * (precise::max(precise::min(_146.x, _146.y), precise::min(precise::max(_146.x, _146.y), _146.z)) - 0.5)) + 0.5, 0.0, 1.0)));
    return out;
}

